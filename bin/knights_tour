#!/usr/bin/env ruby

require 'rubygems'
require 'trollop'

$LOAD_PATH.unshift(File.dirname(__FILE__) + '/../lib')

require 'knights_tour'

############################################################################
# Parse the command line arguments and invoke appropriate action.

include KnightsTour

options = Trollop::options do
  version Meta.version

  banner <<-EOS
A proram that attempts to find a solution to the Knight's Tour problem.

Usage:

  #{File.basename($0)} [OPTIONS] [DIMENSION]

Options:
  EOS

  opt :position, "Set start position (default: 0,0)",
      :type     => :string,
      :required => false
end

# defaults
app_params = {
  :dimension => 8,
  :position  => [0, 0]
}

begin
  app_params[:dimension] = ARGV.shift.to_i unless ARGV.empty?

  if options[:position]
    position = options[:position].split(',')
    app_params[:position] = [position[0].to_i, position[1].to_i]
  end

  app = Application.new(app_params[:dimension], app_params[:position])
rescue ArgumentError => e
  Trollop::die e.to_s
end

$stdout.puts app.solve
